datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Plan {
  id        String    @id @default(cuid())
  name      String
  price     Int?
  tasks     Int
  agents    Int
  companies Company[]
}

model Company {
  id        String   @id @default(cuid())
  name      String
  planId    String
  plan      Plan     @relation(fields: [planId], references: [id])
  users     User[]
  teams     Team[]
  tickets   Ticket[]
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  avatarUrl String?
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  teamId    String?
  team      Team?    @relation(fields: [teamId], references: [id])
  tickets   Ticket[]
}

model Team {
  id        String   @id @default(cuid())
  name      String
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  users     User[]
  tickets   Ticket[]
}

model Ticket {
  id            String    @id @default(cuid())
  subject       String
  description   String    @db.Text
  customerName  String
  customerEmail String
  status        String    @default("open") // e.g., open, in_progress, closed, escalated
  priority      String    @default("medium")
  urgency       String    @default("medium")
  category      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  companyId     String
  company       Company   @relation(fields: [companyId], references: [id])
  assignedToId  String?
  assignedTo    User?     @relation(fields: [assignedToId], references: [id])
  teamId        String?
  team          Team?     @relation(fields: [teamId], references: [id])
  logs          TicketLog[]
}

model TicketLog {
  id        String   @id @default(cuid())
  timestamp DateTime
  actor     String // "AI" or "User"
  actorName String
  action    String
  details   String   @db.Text
  ticketId  String
  ticket    Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)
}

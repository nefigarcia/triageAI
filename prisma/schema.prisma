// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String   @id @default(cuid())
  name      String
  plan      Plan     @relation(fields: [planId], references: [id])
  planId    String
  users     User[]
  teams     Team[]
  tickets   Ticket[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  avatarUrl String?
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
  tickets   Ticket[]
}

model Team {
  id        String   @id @default(cuid())
  name      String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  users     User[]
  tickets   Ticket[]
}

model Plan {
  id          String    @id
  name        String
  description String
  price       Int?
  period      String
  tasks       Int
  agents      Int
  companies   Company[]
}

model Ticket {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  subject       String
  description   String
  customerName  String
  customerEmail String
  status        String      // open, in_progress, closed, escalated
  urgency       String      // low, medium, high
  category      String
  company       Company     @relation(fields: [companyId], references: [id])
  companyId     String
  assignedTo    User?       @relation(fields: [assignedToId], references: [id])
  assignedToId  String?
  team          Team?       @relation(fields: [teamId], references: [id])
  teamId        String?
  logs          TicketLog[]
}

model TicketLog {
  id        String   @id @default(cuid())
  timestamp DateTime @default(now())
  actor     String   // "AI" or "User"
  actorName String
  action    String
  details   String
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  ticketId  String
}

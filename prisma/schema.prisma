// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id      String   @id @default(cuid())
  name    String
  planId  String
  plan    Plan     @relation(fields: [planId], references: [id])
  users   User[]
  teams   Team[]
  tickets Ticket[]
  usage   Usage?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Plan {
  id        String    @id @default(cuid())
  name      String
  price     Float
  tasks     Int
  agents    Int
  companies Company[]
}

model Usage {
  id        String  @id @default(cuid())
  companyId String  @unique
  company   Company @relation(fields: [companyId], references: [id])
  tasks     Int
  agents    Int
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  avatarUrl String?
  role      String
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  teamId    String?
  team      Team?    @relation(fields: [teamId], references: [id])
  tickets   Ticket[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        String   @id @default(cuid())
  name      String
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  users     User[]
  tickets   Ticket[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id            String      @id @default(cuid())
  subject       String
  description   String
  customerName  String
  customerEmail String
  status        String
  urgency       String
  category      String
  assignedToId  String?
  assignedTo    User?       @relation(fields: [assignedToId], references: [id])
  teamId        String?
  team          Team?       @relation(fields: [teamId], references: [id])
  companyId     String
  company       Company     @relation(fields: [companyId], references: [id])
  logs          TicketLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TicketLog {
  id        String   @id @default(cuid())
  timestamp DateTime
  actor     String
  actorName String
  action    String
  details   String
  ticketId  String
  ticket    Ticket   @relation(fields: [ticketId], references: [id])

  createdAt DateTime @default(now())
}
